name: 'Debug Build'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: arm-none-eabi-gcc
      uses: fiam/arm-none-eabi-gcc@v1.0.2
      with:
        release: '9-2020-q2'
        
    - name: Setup Python
      uses: actions/setup-python@v3.1.4
      
    - name: Checkout
      uses: actions/checkout@v2

    - name: Submodules Init
      run: git submodule update --init --recursive

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PROJECT_rssi_printer_encoded:BOOL=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target rssi_printer_encoded

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ${{github.workspace}}/build/src/rssi_printer/rssi_printer_encoded.bin
        asset_name: uv_k5_01_26_rssi_printer_encoded.bin
        asset_content_type: application/octet-stream
